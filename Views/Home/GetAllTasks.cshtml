@model IEnumerable<ToDOListModel.ToDOListEntity>

@{
    ViewBag.Title = "GetAllTasks";
}
<head>
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>
</head>
<h2 style="contain-intrinsic-width:revert-layer">TASKS</h2>

<p>
    @if (User.IsInRole("Admin") || User.IsInRole("Customer"))
    {
        @Html.ActionLink("Add New", "Create", "Home", null, new { @class = "btn btn-primary" })
    }
    </p>
<table id="rearrangeableTable" class="table">
    <thead>
        <tr>
            <th><input type="checkbox" class="head-checkbox" disabled="disabled" /></th>

            <th>
                @Html.DisplayNameFor(model => model.TaskName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.Hidden("Status")
            </th>
            <th>Status</th>
            <th></th>
        </tr>
    </thead>

@foreach (var item in Model) {
    <tr id="@(item.Id)">
        <td><input type="checkbox" class="row-checkbox" /></td>
        
        <td>
            @Html.DisplayFor(modelItem => item.TaskName)
        </td>
        <td>
            @Html.Raw(item.Description)
        </td>
        <td>
            @Html.HiddenFor(modelItem => item.Status, new { @class = "status-value" })
        </td>
        <td id="column">Completed</td>
        <td>
            
        @Html.ActionLink("Edit", "Update", new { id = item.Id }, new { @class = "btn btn-primary" }) |
        @Html.ActionLink("Details", "GetTask", new { id = item.Id }, new { @class = "btn btn-primary" }) |
        @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class = "btn btn-primary" })
        </td>
    </tr>
}

</table>
<script>

    $(document).ready()
    {
        
        $("#rearrangeableTable tbody").sortable({
            helper: fixHelperModified,
            stop: updateIndex
        }).disableSelection();

        function fixHelperModified(e, tr) {
            var $originals = tr.children();
            var $helper = tr.clone();
            $helper.children().each(function (index) {
                $(this).width($originals.eq(index).width());
            });
            return $helper;
        }

        function updateIndex(e, ui) {
            
            var order = [];
            $("#rearrangeableTable tbody tr").each(function (index, element) {
                order.push({
                    Id: $(this).closest('tr').attr('id'),
                    SortOrder: index + 1
                });
            });

            
            $.ajax({
                url: '/Home/UpdateSortOrder',  
                method: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(order),
                success: function (response) {
                    console.log('Order saved successfully');
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.error('Error saving order');
                }
            });
        }


        $('.table tr').each(function () {
            var tableRow = $(this).closest('tr');
            var status = $(this).find(".status-value").val();
            if (status != undefined && status != null && status == "Y") {
                tableRow.find(".row-checkbox").prop('checked', true);
                tableRow.css('background-color', 'pink');
                tableRow.find("#column").text('Completed');
            }
            else {
                tableRow.css('background-color', 'white');
                tableRow.find("#column").text('Pending');
            }
        });

        
            
        $('tr .row-checkbox').click(function (event) {
            var eventRow = event.target.closest('tr');
            var closestTrId = event.target.closest('tr')['id'];
            var checkedRow = $(this).closest('tr');
            if (event.target.checked) {
                checkedRow.css('background-color', 'pink');
                checkedRow.find("#column").text('Completed');
            }
            else {
                checkedRow.css('background-color', 'white');
                checkedRow.find("#column").text('Pending');
            }
            obj = {
                Id: closestTrId,
                TaskName: eventRow.cells[1].innerText,
                Description: eventRow.cells[2].innerText,
                Status: event.target.checked ? "Y" : "N"
            };
            $.ajax({
                url: '/Home/Update',
                method: 'post',
                data: obj,
                success: function (data) {

                },
                error: function (err) {
                    console.log(error);
                }
            });
        });
    }

</script>
<br />
<br />
